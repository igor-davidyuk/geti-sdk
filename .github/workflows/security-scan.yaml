name: Security scans

on:
  workflow_dispatch:

  schedule: # Execute tests at midnight every day
    - cron: "0 0 * * *"

env:
  SNYK_API: https://snyk.devtools.intel.com/api/v1
  SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  REPORT_DIRECTORY: reports

permissions:
  contents: read

jobs:
  security:
    runs-on: [ubuntu-latest]
    permissions:
      security-events: write
      actions: read
      contents: read
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Install package with dev requirements
        # Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ".[dev]" --pre

      - name: Create report directory
        # Creates the temporary directory used to store the test reports
        run: mkdir $REPORT_DIRECTORY

      - name: Bandit scan
        # Run Bandit scan
        run: |
          pip install bandit
          bandit -r . --ini tox.ini -f 'txt' -o $REPORT_DIRECTORY/bandit.txt -v

      - name: Trivy vulnerability scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          severity: 'CRITICAL'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Upload test reports
        # Publish the test reports to github
        uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: test-reports
          path: ${{ env.REPORT_DIRECTORY }}

      - name: Clean up artifact directories
        # Remove temporary report directory
        if: ${{ always() }}
        run: |
          rm -r $REPORT_DIRECTORY
